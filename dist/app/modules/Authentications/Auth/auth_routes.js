"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthRoutes = void 0;
const express_1 = require("express");
const validateRequest_1 = __importDefault(require("../../../middlewares/validateRequest"));
const auth_controller_1 = require("./auth_controller");
const auth_1 = __importDefault(require("../../../middlewares/auth"));
const admin_controller_1 = require("../Admin/admin_controller");
const user_interface_1 = require("../User/user_interface");
const auth_validation_1 = require("./auth_validation");
const user_controller_1 = require("../User/user_controller");
const clientInfoParser_1 = __importDefault(require("../../../middlewares/clientInfoParser"));
const router = (0, express_1.Router)();
router.post('/login', auth_controller_1.AuthController.loginUser);
router.post('/register', clientInfoParser_1.default, user_controller_1.UserController.registerUser);
router.post('/refresh-token', (0, validateRequest_1.default)(auth_validation_1.AuthValidation.refreshTokenZodSchema), auth_controller_1.AuthController.refreshToken);
router.post('/change-password', (0, auth_1.default)(user_interface_1.UserRole.Admin, user_interface_1.UserRole.Student, user_interface_1.UserRole.Tutor), auth_controller_1.AuthController.resetPassword);
router.post('/forgot-password', auth_controller_1.AuthController.forgotPassword);
router.patch('/users/:id/block', (0, auth_1.default)(user_interface_1.UserRole.Admin), admin_controller_1.AdminController.updateUserBlocked);
exports.AuthRoutes = router;
